filter {

   if [message] =~ /^\s*$/ {
      drop { }
   } else {
       mutate {
         id => "zscalernss-web_target_index"
         add_field => { "[@metadata][target_index]" => "zscaler" }
       }
       mutate {
            rename => {
                id => "zscalernss-web_logstash_rename_host_field"
                "host" => "[host][ip]"
            }
       }
       csv {
           separator => ","
           skip_header => "true"
           columns => ["zscaler_timestamp","source.user.name","network.protocol","url.original","event.action","zscaler_zia.web.app.name","zscaler_zia.web.app.class","http.request.bytes","http.response.bytes","zscaler_zia.web.stime","zscaler_zia.web.ctime","zscaler_zia.web.url.class","zscaler_zia.web.url.category.super","zscaler_zia.web.url.category.sub","zscaler_zia.web.malware.category","zscaler_zia.web.threat.name","event.risk_score","zscaler_zia.web.dpl.engine","zscaler_zia.web.dpl.dictionaries","zscaler_zia.web.location","zscaler_zia.web.department","source.ip","destination.ip","http.request.method","http.response.status_code","user_agent.original","http.request.referrer","rule.type","rule.label","http.request.mime_type","zscaler_zia.web.unscannable.type","zscaler_zia.web.device.owner","zscaler_zia.web.device.hostname"]
           convert => {
             "zscaler_zia.web.ctime" => "integer"
             "http.request.bytes" => "integer"
             "http.response.bytes" => "integer"
             "zscaler_zia.web.stime" => "integer"
             "event.risk_score" => "integer"
           }
      }
      date {
          match => [ "zscaler_timestamp", "E MMM  d HH:mm:ss yyyy", "EE MMM  d HH:mm:ss yyyy","EEE MMM  d HH:mm:ss yyyy", "ISO8601"]
          remove_field => [ "zscaler_timestamp" ]
      }
   # "Thu Sep  8 13:19:02 2022
    }
}

